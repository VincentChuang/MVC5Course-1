@model IEnumerable<MVC5Course.Models.Product>
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
    if (IsAjax) {
        Layout = null;
    }
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Active)
        </td>
        <td>
            <!--若 Stock 小於 1000，則顯示 紅色-->
            @if (item.Stock < 1000) {
                @:<strong style="color: red;">
            }
            @Html.DisplayFor(modelItem => item.Stock)
            @if(item.Stock < 1000)
            {
                @:</strong>
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ProductId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ProductId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ProductId } , new { onclick="return confirm('Are you sure?');" }  )
        </td>
    </tr>
}

</table>



@{
    //將 IEnumerable Model 轉型 為 IPagedList
    //因 IEnumerable 較為抽象，因此可以轉型為 IPagedList 具象型別
    var pagedListData = Model as IPagedList;
}
@Html.PagedListPager(pagedListData, (p) => Url.Action("Index", new { pageNo = p }) )

Ajax分頁：<br/>
@Html.PagedListPager(pagedListData,
    (p) => Url.Action("Index", new { pageNo = p }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("divAjaxMain"))

@section Scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}

