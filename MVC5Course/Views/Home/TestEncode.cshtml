@using Microsoft.Security.Application
@{
    Layout = "";

    var a = "<h1>Hello 哈囉 World</h1>";
}

@Html.Raw(a)

<hr />

@a

<hr />

<a href="/Home/TestCode?html=@(a)">content</a>

<hr />

<a href="/Home/TestCode?html=@Url.Encode(a)">content</a>

<hr />

@{
    var path = "/Home/首頁";
}
<a href="@HttpUtility.UrlPathEncode(path)?html=@Url.Encode(a)">content</a>

@{
    var msg = @"新增成功！

Hello";
}
<script>
    //alert('@Ajax.JavaScriptStringEncode(msg)'); //若包含斷行訊息，需要包 Ajax.JavaScriptStringEncode 呈現
</script>


<hr />

@{
    var sXss = "<h1>Hello <script>alert('XSS');</script></h1>";
}
<br/>一、直接執行 Raw 會將含攻擊碼執行，alert被執行<br/>
@Html.Raw(sXss)
<br/>二、透過編碼將該訊息編碼印出<br/>
@Html.Raw(Encoder.HtmlEncode(sXss))
<br/>三、透過 AntiXss 套件，濾除攻擊語法<br/>
@Html.Raw(Sanitizer.GetSafeHtmlFragment(sXss))



